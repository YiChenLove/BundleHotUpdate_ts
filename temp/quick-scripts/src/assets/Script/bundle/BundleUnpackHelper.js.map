{"version":3,"sources":["assets/Script/bundle/BundleUnpackHelper.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["\n\nimport SingleIns from \"./SingleIns\";\nimport BundleHotUIHelper from \"./BundleHotUIHelper\";\nimport BundleUtil, { CodeType } from \"./BundleUtil\";\nimport BundleManager from \"./BundleManager\";\nimport { ModuleConst, GlobalConst } from \"./Const\";\n\n\nexport default class BundleUnpackHelper extends SingleIns{\n    _bundleMgr: BundleManager;\n    _bundleUtil: BundleUtil;\n    _bundleHotUIHelper: BundleHotUIHelper;\n    _timeOutIds: number[];\n\n    initCom(arg) {\n        this._bundleMgr = BundleManager.getInstance();\n        this._bundleUtil = BundleUtil.getInstance();\n        this._bundleHotUIHelper = BundleHotUIHelper.getInstance();\n    }\n\n    execUnpackage(onComplete){\n\n        if ( !(cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS || cc.sys.os == cc.sys.OS_WINDOWS) ) {\n            BundleUtil.LOG(CodeType.BundleUnpackHelper, \"ignore_unpackage\")\n            onComplete();\n            return \n        } \n\n        let localClientVer = cc.sys.localStorage.getItem(ModuleConst.localClientVer)\n        let writablePath = jsb.fileUtils.getWritablePath() \n        let path_cache  = writablePath + \"gamecaches/\" \n        \n        if( GlobalConst.Client_Version == localClientVer && jsb.fileUtils.isFileExist(path_cache+\"cacheList.json\")){\n            BundleUtil.LOG(CodeType.BundleUnpackHelper, \"Unpackage_not_exec\")\n            onComplete()\n            return ; \n\n        }else { \n            // 第一次启动该版本\n            let nativeRoot = this._bundleMgr.getNativePath() //  \n\n            let path_native = nativeRoot + \"PKgamecaches/\"\n            BundleUtil.LOG(CodeType.BundleUnpackHelper, \"unpackage_res_:\", path_native, path_cache )\n\n            if(!jsb.fileUtils.isDirectoryExist(path_native)){\n                BundleUtil.LOG(CodeType.BundleUnpackHelper, \"PKgamecaches_not_exist\")\n                cc.sys.localStorage.setItem(ModuleConst.localClientVer, GlobalConst.Client_Version )\n                onComplete()\n                return ; \n            }\n            //-------------------------------------------------->>  替换 cacheManager 数据\n            let cacheMag = cc.assetManager.cacheManager\n            // cacheMag.clearCache()\n\n            let coverCachelist = ()=>{\n                let fileStr = jsb.fileUtils.getStringFromFile(path_native + \"cacheList.json\")  \n                \n                let abVersion = {} \n\n                var cache_d_Map = JSON.parse(fileStr)\n                if(cache_d_Map){\n                    let files = cache_d_Map.files\n                    for(let id in  files){\n                        let info = files[id]\n                        // BundleUtil.LOG(CodeType.BundleUnpackHelper, \"call_cacheFile_:\", id, info.url, info.bundle )\n                        cacheMag.cacheFile(id, info.url, info.bundle)\n\n                        // 查找版本号\n                        if(id.indexOf(\"/index.\") != -1){\n                            let splitRet = id.split('.')\n                            abVersion[info.bundle] = splitRet[splitRet.length-2]\n                        }\n                    }\n                }\n\n                // 覆盖本地资源版本号 \n                BundleUtil.LOG(CodeType.BundleUnpackHelper, \"abVersion__:\", JSON.stringify(abVersion) )\n\n                cacheMag.writeCacheFile(()=>{\n\n                    BundleUtil.LOG(CodeType.BundleUnpackHelper, \"writeCache_File_ok\")\n\n                    this._bundleMgr.setLocalAbVersion(abVersion)\n\n\n                    cc.sys.localStorage.setItem(ModuleConst.localClientVer, GlobalConst.Client_Version )\n                    onComplete()\n                })\n            }\n            //--------------------------------------------------<<  替换 cacheManager 数据\n\n            this._bundleHotUIHelper.unpackageShow()\n            this.copyFoldTo(path_native, path_cache, (finish, total)=>{\n                this._bundleHotUIHelper.unpackageUpdateProgress(finish, total)\n                // BundleUtil.LOG(CodeType.BundleUnpackHelper, \"copy_file_:\", finish, total)\n            },()=>{\n                // 完成 \n                this._bundleHotUIHelper.unpackageFinish()  \n                coverCachelist()\n            })\n        }\n\n\n    }\n\n\n    getFileListFromDir(dir, filelist){\n        let co = 1\n        if(cc.sys.os == cc.sys.OS_ANDROID || cc.sys.os == cc.sys.OS_IOS || cc.sys.os == cc.sys.OS_WINDOWS){\n            let cacheJson = jsb.fileUtils.getStringFromFile(dir + \"cacheList.json\")\n            let cacheMap = JSON.parse(cacheJson)\n            let files = cacheMap.files\n            for(let url in files){\n                let item = files[url]\n                let fullpath = this._bundleMgr.getNativePath()+\"PKgamecaches/\"+item.url\n                filelist.push(fullpath)\n                if(co<3){\n                    console.log(\"get_file_list_full_:\", fullpath )\n                }\n                co = co+1\n            } \n        }else {\n            jsb.fileUtils.listFilesRecursively(dir, filelist)\n        } \n    }\n\n    // 拷贝文件夹到 copyFoldTo(\"/path1/src/\", \"/path2/src/\") \n    copyFoldTo(oriRoot, copyTo, onProgress, onComplate){\n\n        let eachFrameCopyNum = 5  // 每帧复制文件数\n\n        if( (typeof(jsb)==\"undefined\") || !jsb.fileUtils.isDirectoryExist(oriRoot)){\n            cc.log(\"ori_folder_not_exist_:\", oriRoot )\n            onComplate();\n            return \n        }\n\n        let filelist = []\n        this.getFileListFromDir(oriRoot, filelist) \n\n        cc.log(\"file_ori_arr_:\",oriRoot, filelist.length);\n\n        let realFileArr = []\n        for(let i=0;i<filelist.length;i++){\n            let path = filelist[i]\n            if(path.substr( path.length-1 )!=\"/\"){\n                realFileArr.push(path)\n            } \n        }\n\n        let totalLen = realFileArr.length\n\n        if(totalLen==0){\n            cc.log(\"totalLen_is_0:\", oriRoot )\n            onComplate();\n            return ;\n        }\n\n        let curMisIndex = 0\n\n        let schHandler = ()=>{\n\n            for(let i=curMisIndex; i<curMisIndex+eachFrameCopyNum; i++){ \n\n                if(i>=totalLen){\n                    this.unIntervalSchedule();\n                    onComplate()\n                    return ;\n                }\n                let path = realFileArr[i] \n    \n                let subPath = path.substr( oriRoot.length )  // 后半部分路径 import/00/00.7871f.json\n                let fileName = path.substr( path.lastIndexOf(\"\\/\")+1) // 文件名 00.7871f.json\n                let targetPath = copyTo + subPath // 目标完整路径\n                let newFold = targetPath.substr( 0, targetPath.lastIndexOf(\"\\/\")+1 ) // 目标文件夹\n    \n                if(!jsb.fileUtils.isDirectoryExist(newFold)){ // 文件夹不存在则创建 \n                    jsb.fileUtils.createDirectory(newFold)\n                }\n\n                let fileData = jsb.fileUtils.getDataFromFile(path); \n                let saveRet = jsb.fileUtils.writeDataToFile(fileData, targetPath);\n                if(!saveRet){\n\n                    this.unIntervalSchedule();\n                    return ;\n                }  \n                \n            } \n            curMisIndex = curMisIndex + eachFrameCopyNum\n\n            onProgress( (curMisIndex<=totalLen? curMisIndex : totalLen), totalLen)\n\n        }\n        this.intervalSchedule(schHandler, 0)\n    }\n}\n"]}