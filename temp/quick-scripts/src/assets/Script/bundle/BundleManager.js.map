{"version":3,"sources":["assets/Script/bundle/BundleManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import Module from \"./BundleModule\";\nimport SingleIns from \"./SingleIns\";\nimport BundleHotUIHelper from \"./BundleHotUIHelper\";\nimport BundleUtil, { CodeType } from \"./BundleUtil\";\nimport BundleUnpackHelper from \"./BundleUnpackHelper\";\nimport { ModuleConst, GlobalConst } from \"./Const\";\n\nexport default class BundleManager extends SingleIns{\n    _bundleUtil: BundleUtil;\n    _unpackage: BundleUnpackHelper;\n    _bundleHotUIHelper: BundleHotUIHelper;\n    _nativeRootPath: string;\n    _useHotUpdate: any;\n    _lastReq_VersionInfoTime: number;\n    _detectNewVersionInterval: number;\n    modules:any = {};\n    _local_data_key: string;\n    _local_Version: any;\n    _romoteVersion: { clientMin: string; modules: {}; };\n    _reqLoopHandler: any;\n    _httpReqHandler: any;\n    _timeOutIds:number[] = [];\n\n    initCom(args){\n        this._bundleUtil     = BundleUtil.getInstance();\n        this._unpackage     = BundleUnpackHelper.getInstance();\n        this._bundleHotUIHelper   = BundleHotUIHelper.getInstance();\n\n        // jsb.fileUtils.getDefaultResourceRootPath()\n        this._nativeRootPath = args.assetPath;\n        BundleUtil.LOG(CodeType.BundleManager, \"_nativeRootPath:\", this._nativeRootPath )\n\n        this._lastReq_VersionInfoTime = 0 //(new Date()).getTime()  // 最后一次检测版本时间\n        this._detectNewVersionInterval = 30  // 自动检测版本间隔\n\n        this.modules = {}\n\n        this._local_data_key = ModuleConst.localVersionConfigKey //\"_local_gameVersionData1\"\n        let versionData = cc.sys.localStorage.getItem(this._local_data_key)\n        if(!versionData){ \n            versionData = this.createDefaultVersionData() \n        }else {\n            versionData = JSON.parse(versionData)\n        } \n        this._local_Version = versionData\n\n        this._romoteVersion = this.createDefaultVersionData()\n\n        this._useHotUpdate = args\n        this._unpackage.initCom(args)\n    }\n\n    execUnpackage(onComplate){\n        this._unpackage.execUnpackage(onComplate)\n    }\n\n    getNativePath(){\n        return this._nativeRootPath\n    }\n\n    reqLoopVersionInfo(){\n        if(this._useHotUpdate){\n            if(this._reqLoopHandler){ return }\n            this._reqLoopHandler = ()=>{\n                this.reqVersionInfo()\n            }\n            this.timeDelayCall(this._reqLoopHandler, this._detectNewVersionInterval)\n        }\n    }\n\n    timeDelayCall(callback: Function, delay: number) {\n        let id: number = setTimeout(callback, delay * 1000); // Assuming delay is in seconds\n        this._timeOutIds.push(id);\n     }\n \n     unAllTimeDelayCall() {\n         // Assuming we have a way to track all timeouts\n         const timeoutIds = this._timeOutIds;\n         timeoutIds.forEach((id: number) => clearTimeout(id));\n         this._timeOutIds = [];\n     }\n\n    // 更新AB版本号 , 新包安装解压资源后覆盖版本号\n    setLocalAbVersion(verObj){\n\n        let localMap = this._local_Version\n        for(let abName in verObj){\n            let verStr = verObj[abName]\n\n            if(!localMap.modules[abName]){   // 运营中新增模块\n                localMap.modules[abName] = {}\n            }\n            localMap.modules[abName].resVersion = verStr \n        } \n\n        cc.sys.localStorage.setItem(this._local_data_key, JSON.stringify(this._local_Version))\n    }\n\n    get_LocalVersion(){\n        return this._local_Version\n    }\n\n    get_RomoteVersion(){\n        return this._romoteVersion\n    }\n\n    createDefaultVersionData(){\n        let ret = {\n            clientMin : \"1.0.0\" , \n            modules : {}\n        }   \n        return ret \n    }\n    \n    // 更新所有模块\n    hotUpdateAllModule(callback, isShowHotDetectAlert){\n        if(!this._useHotUpdate){\n            callback && callback();\n            return false;\n        }\n\n        // 显示正在检测更新提示\n        if(isShowHotDetectAlert){\n            this._bundleHotUIHelper.checkNewVersionShow()\n        }\n\n        return this.hotUpdateMultiModule(Object.keys(this._romoteVersion.modules), ()=>{ \n            this._bundleHotUIHelper.checkNewVersionHide()\n            callback()\n        })\n\n    }\n\n    // 置顶更新模块\n    public hotUpdateMultiModule(moduleNameArr, callback){\n        if(this.isNeedReq_versionInfo()){\n            this.reqVersionInfo(()=>{\n                this._doHotUpdateMulti(moduleNameArr, callback)\n            })\n        }else {\n            this._doHotUpdateMulti(moduleNameArr, callback)\n        } \n    }\n\n    _doHotUpdateMulti(moduleNameArr, callback){\n        if(!this._useHotUpdate){\n            callback && callback();\n            return false;\n        }\n\n        // 大版本太旧\n        if(-1 == this._bundleUtil.comVersion(GlobalConst.Client_Version, this._romoteVersion.clientMin )){\n            this._bundleHotUIHelper.showAlertClientTooOld()\n            return \n        }\n        BundleUtil.LOG(CodeType.BundleManager, \"moduleName_ori:\", JSON.stringify(moduleNameArr) )\n        moduleNameArr = this.getDependModule(moduleNameArr)\n        BundleUtil.LOG(CodeType.BundleManager, \"moduleName_dep:\", JSON.stringify(moduleNameArr) )\n\n        // isShowHotUI \n        let need_Update  = false \n        let need_Restart = false \n\n        // 所有module更新完成\n        let onAllModuleHotFinish = ()=>{\n            BundleUtil.LOG(CodeType.BundleManager, \"hot_update_-AllHot_Finish\")\n            cc.sys.localStorage.setItem(this._local_data_key, JSON.stringify(this._local_Version))\n            if(need_Restart){\n                // this.scheduleOnce(()=>{ \n                //     // cc.sys.restartVM() \n                //     cc.game.restart();\n                // }, 0.1)\n                setTimeout(() => { \n                    cc.game.restart();\n                }, 100);\n            }else {\n                callback && callback();\n            }\n        }\n\n        // 下载 assets bundle 资源\n        let needUpdateNames = []\n        let preloadDir = ()=>{\n            this._bundleUtil.sequenceMis(needUpdateNames, ()=>{\n                BundleUtil.LOG(CodeType.BundleManager, \"hot_update_-allPreloadFinish\")\n                // 所有任务完成\n                this._bundleHotUIHelper.hideUpdating(onAllModuleHotFinish)\n\n            }, (curMis, idx, onExec)=>{ \n                // 每个预加载任务\n                let curMisIdx = idx+1\n                let totalMis = needUpdateNames.length\n                let moduleObj = this.modules[needUpdateNames[idx]]\n                moduleObj.preloadModule((finish, total, item)=>{\n\n                    // BundleUtil.LOG(CodeType.BundleManager, \"hot_update_-onProgress_info_:\", curMisIdx, finish, total, item.url )\n                    this._bundleHotUIHelper.onProgress( curMisIdx, totalMis, finish, total)\n                }, (items)=>{\n\n                    BundleUtil.LOG(CodeType.BundleManager, \"hot_update_-preloadOK_:\", needUpdateNames[idx] )\n                    onExec()\n                })\n            })\n        }\n\n\n        // ------------------------------------------- 顺序下载配置 \n        this._bundleUtil.sequenceMis(moduleNameArr, ()=>{\n            // 所有配置下载完成\n            if(need_Update){\n                this._bundleHotUIHelper.showUpdating(1, needUpdateNames.length)\n                this._bundleHotUIHelper.showHotAlert(need_Restart, ()=>{\n                    preloadDir()\n                })\n            }else {\n                onAllModuleHotFinish()\n            }\n            \n        }, (curMis, idx, onExec)=>{ \n            // 每个预加载任务\n            let moduleName = moduleNameArr[idx]\n            let retTemp = {}\n            retTemp = this._hotUpdateModule(moduleName, (hot_ret)=>{\n                let {haveNewVer, needRestart} = hot_ret\n                if(haveNewVer) { \n                    need_Update = true \n                    needUpdateNames.push(moduleName)\n                }\n                if(needRestart) { need_Restart = true }\n                onExec()\n            }) \n            // ------------------------------------------ \n        })\n        \n    }\n\n    // 获取依赖模块, 并排序\n    getDependModule(names, h?){\n        h = h || 1\n        let rms = this._romoteVersion.modules \n        let ret:any = {}\n        for(let idx in names){\n            let n_1 = names[idx]\n            ret[n_1] = { name:n_1, priority:rms[n_1].priority}\n\n            let depends = this.getDependModule(rms[n_1].depend || [], h+1)\n            for(let j in depends){\n                let n_2 = depends[j]\n                ret[n_2] = { name:n_2, priority:rms[n_2].priority}\n            }\n        }\n        //排序, 优先级高的先更新 \n        if(h==1){\n            let minfos : any = Object.values(ret)\n            minfos.sort(function(a : any,b : any){  \n                if(a.priority > b.priority){ return -1}\n                return 1;\n            })\n            ret = {}\n            for(let idx in  minfos){\n                ret[minfos[idx].name] = 1\n            }\n        }\n\n        return Object.keys(ret)\n    }\n\n    // 更新到最新版本 \n    _hotUpdateModule(moduleName, callback){\n        if(!this._useHotUpdate){\n            let ret = { haveNewVer:false, needRestart:false };\n            callback && callback(ret);\n            return ret;\n        }\n\n        let local_Ver = this._local_Version.modules[moduleName].resVersion\n        let romoteVer = this._romoteVersion.modules[moduleName].resVersion\n        let moduleObj = this.modules[moduleName]\n\n        BundleUtil.LOG(CodeType.BundleManager, \"version_info_data_-local:\", JSON.stringify(this._local_Version) )\n        BundleUtil.LOG(CodeType.BundleManager, \"version_info_data_-remote:\", JSON.stringify(this._romoteVersion) )\n\n        let ret = { haveNewVer: (local_Ver != romoteVer), needRestart:false }\n\n        let loadVerFunc = (mObj, ver, cb)=>{\n            mObj.loadAB(()=>{\n                if(local_Ver != romoteVer){\n                    this._local_Version.modules[moduleName].resVersion = romoteVer\n                    this._local_Version.modules[moduleName].showVer = this._romoteVersion.modules[moduleName].showVer\n                    \n                }\n                cb && cb();\n            }, ver)\n        }\n\n        if(!moduleObj){\n            // 未加载过, 更新后不需要重启\n            moduleObj = new Module();\n            loadVerFunc( moduleObj.init(moduleName), romoteVer, ()=>{\n                this.modules[moduleName] = moduleObj\n                callback && callback(ret);\n            }) \n\n        }else {\n            // 已加载, 若有更新则更新后重启\n            if(local_Ver == romoteVer){\n                callback && callback(ret);\n            }else {\n                ret.needRestart = true \n                loadVerFunc(moduleObj, romoteVer, ()=>{\n                    callback && callback(ret);\n                })\n            }\n        }\n        return ret\n\n    }\n    // ------------------------------------------------------------\n    getBundle(moduleName){\n        // BundleUtil.LOG(CodeType.BundleManager, \"ModuleMag_getbundle__:\", moduleName)\n        return this.modules[moduleName]._abObj\n    }\n\n    getModule(moduleName){\n        return this.modules[moduleName]\n    }\n\n    addModule(moduleName, cb){\n        let module = this.modules[moduleName]\n        BundleUtil.LOG(CodeType.BundleManager, \"module_mag-addMOdule:\", moduleName, module )\n        if(module){ \n            cb(module)\n            return module\n        }\n        this.removeModule(moduleName)\n\n        BundleUtil.LOG(CodeType.BundleManager, \"load_AB____:\", moduleName)\n\n        let moduleObj = new Module();\n        moduleObj.init(moduleName, this._useHotUpdate).loadAB(()=>{\n            this.modules[moduleName] = moduleObj\n            cb && cb(moduleObj)\n        })\n\n    }\n\n    removeModule(moduleName){\n        let moduleObj = this.modules[moduleName]\n        if(!moduleObj){ return }\n        moduleObj.releaseAB()\n        delete this.modules[moduleName];\n    }\n\n    //------------------------------------------------------------------->> 查询新版本\n    isNeedReq_versionInfo(){\n        if(ModuleConst.reqVersionImmediately){\n            return true \n        }\n\n        let curTime = (new Date()).getTime()  \n        BundleUtil.LOG(CodeType.BundleManager, \"is_need_req_ver_:\", curTime , this._lastReq_VersionInfoTime)\n        if(curTime - this._lastReq_VersionInfoTime > this._detectNewVersionInterval*1000){ \n            return true \n        } \n        return false\n    }\n\n    reqVersionInfo(callback?: Function){\n        if(!this._useHotUpdate){\n            callback && callback();\n            return false;\n        }\n        if(this._httpReqHandler){\n            this._httpReqHandler.abort()\n        }\n        let verUrl = ModuleConst.hotUrl + \"verconfig.json\" + \"?renew=\" + this._bundleUtil.createUUID() \n        BundleUtil.LOG(CodeType.BundleManager, \"req_version_url_:\", verUrl)\n\n        this._httpReqHandler = this._bundleUtil.makeXMLHttp({url: verUrl, callback:(_args)=>{\n\n            let httpData = _args.retData\n            if(!httpData){\n                return ;\n            }\n            this._httpReqHandler = null\n            this._romoteVersion = httpData\n\n            BundleUtil.LOG(CodeType.BundleManager, \"onReqVersion_Info_:\", JSON.stringify(httpData) )\n            let localMap = this._local_Version\n            let remoteMap = httpData\n            let needSave = false \n\n            for(let moduleName in remoteMap.modules){ \n\n                if(!localMap.modules[moduleName]){   // 运营中新增模块\n                    localMap.modules[moduleName] = {}\n                }\n                if(!localMap.modules[moduleName].showVer){\n                    needSave = true \n                    localMap.modules[moduleName].showVer = (remoteMap.modules[moduleName].showVer)\n                }\n            }\n\n            if(needSave){\n                cc.sys.localStorage.setItem(this._local_data_key, JSON.stringify(this._local_Version))\n            }\n\n            this._lastReq_VersionInfoTime = (new Date()).getTime()\n            callback && callback();\n        }}) \n        \n    }\n    \n\n    //-------------------------------------------------------------------<< 查询新版本\n\n}\n"]}