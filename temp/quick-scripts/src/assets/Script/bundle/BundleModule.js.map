{"version":3,"sources":["assets/Script/bundle/BundleModule.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import BundleUtil, { CodeType } from \"./BundleUtil\";\nimport { ModuleConst } from \"./Const\";\n\nexport default class BundleModule {\n\n    _ABName: string;\n    _useHotUpdate: boolean;\n    _abObj: any;\n    _timeOutIds: number[];\n\n    init(ABName: string, useHotUpdate: boolean){\n       BundleUtil.LOG(CodeType.BundleModule, \"module_init\")\n        \n        this._ABName = ABName\n        this._useHotUpdate = useHotUpdate\n        return this\n    }\n\n    getABObj(){\n        return this._abObj \n    }\n    \n    getModuleName(){\n        return this._ABName\n    }\n\n    loadAB(cb, version?){\n        // {version: 'fbc07'},\n        let loadArg: any = {}\n        if(version){\n            loadArg.version = version\n        }\n        let isValid = true \n        let abUrl = this._ABName \n\n        if(this._useHotUpdate){\n            // 如果希望使用creator构建时填的资源服务器地址,将下面这行代码注释掉即可.\n            abUrl = ModuleConst.hotUrl + \"remote/\" + this._ABName\n        }\n        BundleUtil.LOG(CodeType.BundleModule, \"loadAB_:\", this._ABName, abUrl  )\n        cc.assetManager.loadBundle(abUrl,  loadArg, (err, bundle)=> {\n            if(!isValid){ return } ;  isValid = false ;\n            \n            if(!err){\n                BundleUtil.LOG(CodeType.BundleModule, \"loadAB_OK_:\", this._ABName )\n                this._abObj = bundle \n\n                cb()\n            }else {\n                BundleUtil.LOG(CodeType.BundleModule, \"load_ab_Err_:\", this._ABName, JSON.stringify(err)) \n                // 错误重试\n                this.intervalScheduleOnce(()=>{\n                    this.loadAB(cb, version)\n                }, 3)\n            }\n        });\n    }\n    \n\n    // 下载资源\n    preloadModule(onProgress, onComplete){\n        let is_Valid = true\n\n        //---------------------------------------------------------\n        let autoAtlas = []\n        let resMap = this._abObj._config.assetInfos._map\n        for(let idx in resMap){\n            let item = resMap[idx]\n            if(!item.path && item.nativeVer){\n                let urll = cc.assetManager.utils.getUrlWithUuid(item.uuid, {\n                    __nativeName__: \".png\",\n                    nativeExt: cc.path.extname(\".png\"),\n                    isNative: true\n                }); \n                if(urll){\n                    autoAtlas.push(urll)\n                }\n            }\n        }\n\n        BundleUtil.LOG(CodeType.BundleModule, \"autoatlas_url_arr_:\", JSON.stringify(autoAtlas))\n        let extNum = autoAtlas.length \n        let finishNum = 0\n        let is_2Valid = true\n        let preloadAutoAtlas = ()=>{\n            if(autoAtlas.length == 0 ){ \n                if(!is_2Valid){ return; }; is_2Valid = false ;\n                onComplete && onComplete();\n                return \n            }\n\n            // RequestType.URL = 'url' \n            cc.assetManager.preloadAny(autoAtlas, { __requestType__: 'url', type: null, bundle: this._abObj.name }, \n                (finish, total, item)=>{\n                    if(!is_2Valid){ return; }; \n                    BundleUtil.LOG(CodeType.BundleModule, \"load_autoatlas_progress_:\",this._abObj.name, finish, total )\n                    onProgress && onProgress(finish+finishNum, total+finishNum, item);\n                }, (error, items)=>{\n                    if(!is_2Valid){ return; }; is_2Valid = false ;\n                    if(!error){\n                        onComplete && onComplete();\n                    }else { \n                        BundleUtil.LOG(CodeType.BundleModule, \"preloadAutoAtlas_error:\", JSON.stringify(error) )\n                        this.intervalScheduleOnce(()=>{\n                            this.preloadModule(onProgress, onComplete);\n                        }, 3)\n                    }\n                }   \n            );\n                \n        }\n        //--------------------------------------------------------- \n\n        this._abObj.preloadDir(\"root\", (finish, total, item)=>{\n            if(!is_Valid){ return; };\n            finishNum = total\n            onProgress && onProgress(finish, total + extNum, item);\n        }, (error, items)=>{\n            if(!is_Valid){ return; }; is_Valid = false ;\n            if(!error){\n                // onComplete && onComplete(items);\n                preloadAutoAtlas()\n            }else {\n                this.intervalScheduleOnce(()=>{\n                    this.preloadModule(onProgress, onComplete);\n                }, 3)\n            }\n        })\n\n    }\n\n    releaseAB(){\n        this.unIntervalSchedule();\n        if(!this._abObj ){ return }\n        BundleUtil.LOG(CodeType.BundleModule, \"release_ab__\") \n        cc.assetManager.removeBundle(this._abObj);\n        this._abObj = null\n    }\n\n    intervalScheduleOnce(callback: Function, delay: number) {\n       let id: number = setTimeout(callback, delay * 1000); // Assuming delay is in seconds\n       this._timeOutIds.push(id);\n    }\n\n    unIntervalSchedule() {\n        // Assuming we have a way to track all timeouts\n        const timeoutIds = this._timeOutIds;\n        timeoutIds.forEach((id: number) => clearTimeout(id));\n        this._timeOutIds = [];\n    }\n\n}\n\n"]}